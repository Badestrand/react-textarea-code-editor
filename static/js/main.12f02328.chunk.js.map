{"version":3,"sources":["../node_modules/code-example/txt lazy /^/.//sample/..*/.txt$/ groupOptions: {} namespace object","../../../src/utils.ts","../../../src/SelectionText.ts","../../../src/styles.ts","../../../src/index.tsx","../../../src/shortcuts.ts","App.tsx","../README.md","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","stopPropagation","SelectionText","elm","start","end","value","selectionStart","selectionEnd","this","isNaN","slice","charAt","str","getSelectedValue","indent","oldStart","text","reg","RegExp","newStart","txt","event","Event","bubbles","cancelable","container","position","textAlign","boxSizing","padding","overflow","textarea","top","left","height","width","resize","color","MozOsxFontSmoothing","WebkitFontSmoothing","WebkitTextFillColor","editor","margin","border","background","display","fontFamily","fontSize","fontStyle","fontVariantLigatures","fontWeight","letterSpacing","lineHeight","tabSize","textIndent","textRendering","textTransform","whiteSpace","wordBreak","overflowWrap","outline","props","prefixCls","minHeight","placeholder","language","className","style","onChange","other","useState","setValue","useEffect","textRef","useRef","useImperativeHandle","contentStyle","paddingTop","paddingRight","paddingBottom","paddingLeft","htmlStr","useMemo","html","String","fragment","ignoreMissing","preView","styles","dangerouslySetInnerHTML","__html","autoComplete","autoCorrect","spellCheck","autoCapitalize","onKeyDown","api","test","val","shortcuts","ref","evn","App","setLanguage","lang","setLang","default","catch","err","fixed","href","VERSION","autoFocus","toLocaleUpperCase","backgroundColor","target","marginTop","exts","keyName","idx","source","rehypePlugins","rehypeAttr","properties","ReactDOM","render","document","getElementById"],"mappings":"yLAAA,IAAIA,EAAM,CACT,oBAAqB,CACpB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,oBAAqB,CACpB,IACA,GAED,qBAAsB,CACrB,IACA,GAED,mBAAoB,CACnB,IACA,GAED,iBAAkB,CACjB,IACA,GAED,wBAAyB,CACxB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,kBAAmB,CAClB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,oBAAqB,CACpB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,oBAAqB,CACpB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mBAAoB,CACnB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,mBAAoB,CACnB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,iBAAkB,CACjB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAi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","file":"static/js/main.12f02328.chunk.js","sourcesContent":["var map = {\n\t\"./sample.abap.txt\": [\n\t\t592,\n\t\t3\n\t],\n\t\"./sample.aes.txt\": [\n\t\t593,\n\t\t4\n\t],\n\t\"./sample.apex.txt\": [\n\t\t594,\n\t\t5\n\t],\n\t\"./sample.azcli.txt\": [\n\t\t595,\n\t\t6\n\t],\n\t\"./sample.bat.txt\": [\n\t\t596,\n\t\t7\n\t],\n\t\"./sample.c.txt\": [\n\t\t597,\n\t\t8\n\t],\n\t\"./sample.cameligo.txt\": [\n\t\t598,\n\t\t9\n\t],\n\t\"./sample.clojure.txt\": [\n\t\t599,\n\t\t10\n\t],\n\t\"./sample.coffeescript.txt\": [\n\t\t600,\n\t\t11\n\t],\n\t\"./sample.cpp.txt\": [\n\t\t601,\n\t\t12\n\t],\n\t\"./sample.csharp.txt\": [\n\t\t602,\n\t\t13\n\t],\n\t\"./sample.csp.txt\": [\n\t\t603,\n\t\t14\n\t],\n\t\"./sample.css.txt\": [\n\t\t604,\n\t\t15\n\t],\n\t\"./sample.dart.txt\": [\n\t\t605,\n\t\t16\n\t],\n\t\"./sample.dockerfile.txt\": [\n\t\t606,\n\t\t17\n\t],\n\t\"./sample.fsharp.txt\": [\n\t\t607,\n\t\t18\n\t],\n\t\"./sample.go.txt\": [\n\t\t608,\n\t\t19\n\t],\n\t\"./sample.graphql.txt\": [\n\t\t609,\n\t\t20\n\t],\n\t\"./sample.handlebars.txt\": [\n\t\t610,\n\t\t21\n\t],\n\t\"./sample.hcl.txt\": [\n\t\t611,\n\t\t22\n\t],\n\t\"./sample.html.txt\": [\n\t\t612,\n\t\t23\n\t],\n\t\"./sample.ini.txt\": [\n\t\t613,\n\t\t24\n\t],\n\t\"./sample.java.txt\": [\n\t\t614,\n\t\t25\n\t],\n\t\"./sample.javascript.txt\": [\n\t\t615,\n\t\t26\n\t],\n\t\"./sample.json.txt\": [\n\t\t616,\n\t\t27\n\t],\n\t\"./sample.jsx.txt\": [\n\t\t617,\n\t\t28\n\t],\n\t\"./sample.julia.txt\": [\n\t\t618,\n\t\t29\n\t],\n\t\"./sample.kotlin.txt\": [\n\t\t619,\n\t\t30\n\t],\n\t\"./sample.less.txt\": [\n\t\t620,\n\t\t31\n\t],\n\t\"./sample.lex.txt\": [\n\t\t621,\n\t\t32\n\t],\n\t\"./sample.lua.txt\": [\n\t\t622,\n\t\t33\n\t],\n\t\"./sample.markdown.txt\": [\n\t\t623,\n\t\t34\n\t],\n\t\"./sample.mips.txt\": [\n\t\t624,\n\t\t35\n\t],\n\t\"./sample.msdax.txt\": [\n\t\t625,\n\t\t36\n\t],\n\t\"./sample.mysql.txt\": [\n\t\t626,\n\t\t37\n\t],\n\t\"./sample.objective-c.txt\": [\n\t\t627,\n\t\t38\n\t],\n\t\"./sample.pascal.txt\": [\n\t\t628,\n\t\t39\n\t],\n\t\"./sample.pascaligo.txt\": [\n\t\t629,\n\t\t40\n\t],\n\t\"./sample.perl.txt\": [\n\t\t630,\n\t\t41\n\t],\n\t\"./sample.pgsql.txt\": [\n\t\t631,\n\t\t42\n\t],\n\t\"./sample.php.txt\": [\n\t\t632,\n\t\t43\n\t],\n\t\"./sample.plaintext.txt\": [\n\t\t633,\n\t\t44\n\t],\n\t\"./sample.postiats.txt\": [\n\t\t634,\n\t\t45\n\t],\n\t\"./sample.powerquery.txt\": [\n\t\t635,\n\t\t46\n\t],\n\t\"./sample.powershell.txt\": [\n\t\t636,\n\t\t47\n\t],\n\t\"./sample.pug.txt\": [\n\t\t637,\n\t\t48\n\t],\n\t\"./sample.python.txt\": [\n\t\t638,\n\t\t49\n\t],\n\t\"./sample.r.txt\": [\n\t\t639,\n\t\t50\n\t],\n\t\"./sample.razor.txt\": [\n\t\t640,\n\t\t51\n\t],\n\t\"./sample.redis.txt\": [\n\t\t641,\n\t\t52\n\t],\n\t\"./sample.redshift.txt\": [\n\t\t642,\n\t\t53\n\t],\n\t\"./sample.restructuredtext.txt\": [\n\t\t643,\n\t\t54\n\t],\n\t\"./sample.ruby.txt\": [\n\t\t644,\n\t\t55\n\t],\n\t\"./sample.rust.txt\": [\n\t\t645,\n\t\t56\n\t],\n\t\"./sample.sb.txt\": [\n\t\t646,\n\t\t57\n\t],\n\t\"./sample.scala.txt\": [\n\t\t647,\n\t\t58\n\t],\n\t\"./sample.scheme.txt\": [\n\t\t648,\n\t\t59\n\t],\n\t\"./sample.scss.txt\": [\n\t\t649,\n\t\t60\n\t],\n\t\"./sample.shell.txt\": [\n\t\t650,\n\t\t61\n\t],\n\t\"./sample.sol.txt\": [\n\t\t651,\n\t\t62\n\t],\n\t\"./sample.sql.txt\": [\n\t\t652,\n\t\t63\n\t],\n\t\"./sample.st.txt\": [\n\t\t653,\n\t\t64\n\t],\n\t\"./sample.swift.txt\": [\n\t\t654,\n\t\t65\n\t],\n\t\"./sample.systemverilog.txt\": [\n\t\t655,\n\t\t66\n\t],\n\t\"./sample.tcl.txt\": [\n\t\t656,\n\t\t67\n\t],\n\t\"./sample.tsx.txt\": [\n\t\t657,\n\t\t68\n\t],\n\t\"./sample.twig.txt\": [\n\t\t658,\n\t\t69\n\t],\n\t\"./sample.typescript.txt\": [\n\t\t659,\n\t\t70\n\t],\n\t\"./sample.vb.txt\": [\n\t\t660,\n\t\t71\n\t],\n\t\"./sample.verilog.txt\": [\n\t\t661,\n\t\t72\n\t],\n\t\"./sample.vue.txt\": [\n\t\t662,\n\t\t73\n\t],\n\t\"./sample.xml.txt\": [\n\t\t663,\n\t\t74\n\t],\n\t\"./sample.yaml.txt\": [\n\t\t664,\n\t\t75\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 590;\nmodule.exports = webpackAsyncContext;","// @ts-ignore\nimport rehype from 'rehype';\n// @ts-ignore\nimport rehypePrism from '@mapbox/rehype-prism';\n\nexport const processHtml = (html: string) => {\n  return rehype()\n    .data('settings', { fragment: true })\n    .use(rehypePrism, { ignoreMissing: true })\n    .processSync(`${html}`)\n    .toString();\n};\n\n// function htmlEncode(html: string) {\n//   const temp = document.createElement ('div');\n//   (temp.textContent !== undefined) ? (temp.textContent = html) : (temp.innerText = html);\n//   const output = temp.innerHTML;\n//   return output;\n// }\n\nexport function htmlEncode(sHtml: string) {\n  return sHtml.replace(\n    /[<>&\"]/g,\n    (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n  );\n}\n\nexport function stopPropagation(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n","export class SelectionText {\n  elm: HTMLTextAreaElement;\n  start: number;\n  end: number;\n  value: string;\n  constructor(elm: HTMLTextAreaElement) {\n    const { selectionStart, selectionEnd } = elm;\n    this.elm = elm;\n    this.start = selectionStart;\n    this.end = selectionEnd;\n    this.value = this.elm.value;\n  }\n  position(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    this.start = typeof start === 'number' && !isNaN(start) ? start : selectionStart;\n    this.end = typeof end === 'number' && !isNaN(end) ? end : selectionEnd;\n    this.elm.selectionStart = this.start;\n    this.elm.selectionEnd = this.end;\n    return this;\n  }\n  insertText(text: string) {\n    // Most of the used APIs only work with the field selected\n    this.elm.focus();\n    this.elm.setRangeText(text);\n    this.value = this.elm.value;\n    this.position();\n    return this;\n  }\n  getSelectedValue(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    return this.value.slice(\n      typeof start === 'number' && !isNaN(start) ? start : selectionStart,\n      typeof end === 'number' && !isNaN(end) ? start : selectionEnd,\n    );\n  }\n  getLineStartNumber() {\n    let start = this.start;\n    while (start > 0) {\n      start--;\n      if (this.value.charAt(start) === '\\n') {\n        start++;\n        break;\n      }\n    }\n    return start;\n  }\n  /** Indent on new lines */\n  getIndentText() {\n    const start = this.getLineStartNumber();\n    const str = this.getSelectedValue(start);\n    let indent = '';\n    str.replace(/(^(\\s)+)/, (str, old) => (indent = old));\n    return indent;\n  }\n  lineStarInstert(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => text + txt)\n            .join('\\n'),\n        )\n        .position(oldStart + text.length, this.end);\n    }\n    return this;\n  }\n  lineStarRemove(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      const reg = new RegExp(`^${text}`, 'g');\n      let newStart = oldStart - text.length;\n      if (!reg.test(str)) {\n        newStart = oldStart;\n      }\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => txt.replace(reg, ''))\n            .join('\\n'),\n        )\n        .position(newStart, this.end);\n    }\n  }\n  /** Notify any possible listeners of the change */\n  notifyChange() {\n    const event = new Event('input', { bubbles: true, cancelable: false });\n    this.elm.dispatchEvent(event);\n  }\n}\n","import React from 'react';\n\nexport const container: React.CSSProperties = {\n  position: 'relative',\n  textAlign: 'left',\n  boxSizing: 'border-box',\n  padding: 0,\n  overflow: 'hidden',\n};\n\nexport const textarea: React.CSSProperties = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  height: '100%',\n  width: '100%',\n  resize: 'none',\n  color: 'inherit',\n  overflow: 'hidden',\n  MozOsxFontSmoothing: 'grayscale',\n  WebkitFontSmoothing: 'antialiased',\n  WebkitTextFillColor: 'transparent',\n};\n\nexport const editor: React.CSSProperties = {\n  margin: 0,\n  border: 0,\n  background: 'none',\n  boxSizing: 'inherit',\n  display: 'inherit',\n  fontFamily: 'inherit',\n  fontSize: 'inherit',\n  fontStyle: 'inherit',\n  fontVariantLigatures: 'inherit',\n  fontWeight: 'inherit',\n  letterSpacing: 'inherit',\n  lineHeight: 'inherit',\n  tabSize: 'inherit',\n  textIndent: 'inherit',\n  textRendering: 'inherit',\n  textTransform: 'inherit',\n  whiteSpace: 'pre-wrap',\n  wordBreak: 'keep-all',\n  overflowWrap: 'break-word',\n  outline: 0,\n};\n","import React, { useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { processHtml, htmlEncode } from './utils';\nimport shortcuts from './shortcuts';\nimport * as styles from './styles';\nimport './style/index.less';\n\nexport * from './SelectionText';\n\nexport interface TextareaCodeEditorProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  prefixCls?: string;\n  /**\n   * Set what programming language the code belongs to.\n   */\n  language?: string;\n  /**\n   * Optional padding for code. Default: `10`.\n   */\n  padding?: number;\n  /**\n   * The minimum height of the editor. Default: `16`.\n   */\n  minHeight?: number;\n}\n\nexport default React.forwardRef<HTMLTextAreaElement, TextareaCodeEditorProps>((props, ref) => {\n  const {\n    prefixCls = 'w-tc-editor',\n    value: _,\n    padding = 10,\n    minHeight = 16,\n    placeholder,\n    language,\n    className,\n    style,\n    onChange,\n    ...other\n  } = props;\n\n  const [value, setValue] = useState(props.value || '');\n  useEffect(() => setValue(props.value || ''), [props.value]);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  useImperativeHandle<HTMLTextAreaElement, HTMLTextAreaElement>(ref, () => textRef.current!);\n\n  const contentStyle = {\n    paddingTop: padding,\n    paddingRight: padding,\n    paddingBottom: padding,\n    paddingLeft: padding,\n  };\n\n  const htmlStr = useMemo(\n    () =>\n      processHtml(\n        `<pre aria-hidden=true><code ${language ? `class=\"language-${language}\"` : ''} >${htmlEncode(\n          String(value || ''),\n        )}</code><br /></pre>`,\n      ),\n    [value, language],\n  );\n  const preView = useMemo(\n    () => (\n      <div\n        style={{ ...styles.editor, ...contentStyle, minHeight }}\n        className={`${prefixCls}-preview ${language ? `language-${language}` : ''}`}\n        dangerouslySetInnerHTML={{\n          __html: htmlStr,\n        }}\n      />\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [prefixCls, language, htmlStr],\n  );\n\n  return (\n    <div style={{ ...styles.container, ...style }} className={`${prefixCls} ${className || ''}`}>\n      <textarea\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        autoCapitalize=\"off\"\n        {...other}\n        placeholder={placeholder}\n        onKeyDown={(evn) => {\n          shortcuts(evn);\n          other.onKeyDown && other.onKeyDown(evn);\n        }}\n        style={{\n          ...styles.editor,\n          ...styles.textarea,\n          ...contentStyle,\n          minHeight,\n          ...(placeholder && !value ? { WebkitTextFillColor: 'inherit' } : {}),\n        }}\n        ref={textRef}\n        onChange={(evn) => {\n          setValue(evn.target.value);\n          onChange && onChange(evn);\n        }}\n        className={`${prefixCls}-text`}\n        value={value}\n      />\n      {preView}\n    </div>\n  );\n});\n","import { stopPropagation } from './utils';\nimport { SelectionText } from './SelectionText';\n\nexport default function shortcuts(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  const api = new SelectionText(e.target as HTMLTextAreaElement);\n  if (e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    if (api.start === api.end) {\n      api.insertText('  ').position(api.start + 2, api.end + 2);\n    } else if (api.getSelectedValue().indexOf('\\n') > -1 && e.shiftKey) {\n      api.lineStarRemove('  ');\n    } else if (api.getSelectedValue().indexOf('\\n') > -1) {\n      api.lineStarInstert('  ');\n    } else {\n      api.insertText('  ').position(api.start + 2, api.end);\n    }\n    api.notifyChange();\n  } else if (e.code && e.code.toLowerCase() === 'enter') {\n    stopPropagation(e);\n    const indent = `\\n${api.getIndentText()}`;\n    api.insertText(indent).position(api.start + indent.length, api.start + indent.length);\n    api.notifyChange();\n  } else if (\n    e.code &&\n    /^(quote|backquote|bracketleft|digit9|comma)$/.test(e.code.toLowerCase()) &&\n    api.getSelectedValue()\n  ) {\n    stopPropagation(e);\n    const val = api.getSelectedValue();\n    let txt = '';\n    switch (e.code.toLowerCase()) {\n      case 'quote':\n        txt = `'${val}'`;\n        if (e.shiftKey) {\n          txt = `\"${val}\"`;\n        }\n        break;\n      case 'backquote':\n        txt = `\\`${val}\\``;\n        break;\n      case 'bracketleft':\n        txt = `[${val}]`;\n        if (e.shiftKey) {\n          txt = `{${val}}`;\n        }\n        break;\n      case 'digit9':\n        txt = `(${val})`;\n        break;\n      case 'comma':\n        txt = `<${val}>`;\n        break;\n    }\n    api.insertText(txt);\n    api.notifyChange();\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport GitHubCorners from '@uiw/react-github-corners';\nimport rehypeAttr from 'rehype-attr';\n// @ts-ignore\nimport exts from 'code-example/ext.json';\nimport TextareaCodeEditor from '../';\nimport MDStr from '../README.md';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [value, setValue] = useState('');\n  const [language, setLanguage] = useState('jsx');\n  const [lang, setLang] = useState('jsx');\n  useEffect(() => {\n    if (language) {\n      import(`code-example/txt/sample.${language}.txt`)\n        .then((code) => {\n          setValue(code.default || '');\n          let str = language;\n          if (/^(mysql|pgsql)$/.test(language)) {\n            str = 'sql';\n          }\n          if (/^(objective-c)$/.test(language)) {\n            str = 'objc';\n          }\n          if (/^(vue)$/.test(language)) {\n            str = 'html';\n          }\n          setLang(str);\n        })\n        .catch((err) => {\n          setValue('');\n        });\n    }\n  }, [language]);\n  // @ts-ignore\n  const version = VERSION;\n  return (\n    <div className=\"App\">\n      <GitHubCorners fixed href=\"https://github.com/uiwjs/react-textarea-code-editor\" />\n      <h1 className=\"App-title\">\n        React Textarea Code Editor\n        <sup>{version}</sup>\n      </h1>\n      <div className=\"App-editor\">\n        <TextareaCodeEditor\n          autoFocus\n          value={value}\n          language={lang}\n          minHeight={80}\n          placeholder={`Please enter ${(language || '').toLocaleUpperCase()} code.`}\n          style={{\n            backgroundColor: '#f5f5f5',\n            fontSize: 14,\n            fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\n          }}\n          onChange={(evn) => setValue(evn.target.value)}\n        />\n      </div>\n      <div className=\"App-tools\" style={{ marginTop: 5 }}>\n        <select value={language} onChange={(evn) => setLanguage(evn.target.value)}>\n          {exts.map((keyName, idx) => {\n            if (/^diff/.test(keyName)) return null;\n            return (\n              <option key={idx} value={keyName}>\n                Language: {keyName}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n      <MarkdownPreview source={MDStr} className=\"info\" rehypePlugins={[[rehypeAttr, { properties: 'attr' }]]} />\n    </div>\n  );\n};\n\nexport default App;\n","export default \"React Textarea Code Editor\\n===\\n<!--rehype:style=display:none;-->\\n\\n[![Build & Deploy](https://github.com/uiwjs/react-textarea-code-editor/actions/workflows/ci.yml/badge.svg)](https://github.com/uiwjs/react-textarea-code-editor/actions/workflows/ci.yml) [![Coverage Status](https://coveralls.io/repos/github/uiwjs/react-textarea-code-editor/badge.svg?branch=main)](https://coveralls.io/github/uiwjs/react-textarea-code-editor?branch=main) [![Open in unpkg](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/@uiw/react-textarea-code-editor/file/README.md) [![npm bundle size](https://img.shields.io/bundlephobia/minzip/@uiw/react-textarea-code-editor)](https://www.npmjs.com/package/@uiw/react-textarea-code-editor) [![npm version](https://img.shields.io/npm/v/@uiw/react-textarea-code-editor.svg)](https://www.npmjs.com/package/@uiw/react-textarea-code-editor)\\n\\nA simple code editor with syntax highlighting. This library aims to provide a simple code editor with syntax highlighting support without any of the extra features, perfect for simple embeds and forms where users can submit code.\\n\\n**`Features:`**\\n\\n- ☕️ Automatic syntax highlighting.\\n- 🐲 Automatic indent on new lines.\\n- 🩲 Indent line or selected text by pressing tab key, with customizable indentation.\\n- 🌸 Wrap selected text in parens, <kbd>[]</kbd>, <kbd>()</kbd>, <kbd><></kbd>, <kbd>{}</kbd>, <kbd>\\\"\\\"</kbd>, <kbd>''</kbd>, <kbd>\\\"\\\"</kbd>, <kbd>``</kbd>\\n\\n## Install\\n\\n```bash\\n$ npm i @uiw/react-textarea-code-editor\\n```\\n\\n## Usage\\n\\n[![Open in CodeSandbox](https://img.shields.io/badge/Open%20in-CodeSandbox-blue?logo=codesandbox)](https://codesandbox.io/embed/react-textarea-code-editor-for-example-mcebp?fontsize=14&hidenavigation=1&theme=dark)\\n[![Open in Github gh-pages](https://img.shields.io/badge/Open%20In-Github%20gh--pages-blue?logo=github)](https://uiwjs.github.io/react-textarea-code-editor/)\\n\\n```jsx\\nimport CodeEditor from '@uiw/react-textarea-code-editor';\\n\\nfunction App() {\\n  const [code, setCode] = React.useState(\\n    `function add(a, b) {\\\\n  return a + b;\\\\n}`\\n  );\\n  return (\\n    <CodeEditor\\n      value={code}\\n      language=\\\"js\\\"\\n      placeholder=\\\"Please enter JS code.\\\"\\n      onChange={(evn) => setCode(evn.target.value)}\\n      padding={15}\\n      style={{\\n        fontSize: 12,\\n        backgroundColor: \\\"#f5f5f5\\\",\\n        fontFamily: 'ui-monospace,SFMono-Regular,SF Mono,Consolas,Liberation Mono,Menlo,monospace',\\n      }}\\n    />\\n  );\\n}\\n```\\n\\n## Props\\n\\n```ts\\ninterface TextareaCodeEditorProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\\n  prefixCls?: string;\\n  /**\\n   * Set what programming language the code belongs to.\\n   */\\n  language?: string;\\n  /**\\n   * Optional padding for code. Default: `10`.\\n   */\\n  padding?: number;\\n  /**\\n   * The minimum height of the editor. Default: `16`.\\n   */\\n  minHeight?: number;\\n}\\n```\\n\\n## Demo\\n\\nhttps://uiwjs.github.io/react-textarea-code-editor/\\n\\n## Development\\n\\nRuns the project in development mode.  \\n\\n```bash\\n# Step 1, run first, listen to the component compile and output the .js file\\n# listen for compilation output type .d.ts file\\nnpm run watch\\n# Step 2, development mode, listen to compile preview website instance\\nnpm run start\\n```\\n\\n**`production`**\\n\\nBuilds the app for production to the build folder.\\n\\n```bash\\nnpm run build\\n```\\n\\nThe build is minified and the filenames include the hashes.\\nYour app is ready to be deployed!\\n\\n## Related\\n\\n- [@uiw/react-codemirror](https://github.com/uiwjs/react-codemirror): CodeMirror component for React.\\n- [@uiw/react-md-editor](https://github.com/uiwjs/react-md-editor): A simple markdown editor with preview, implemented with React.js and TypeScript.\\n- [@uiw/react-monacoeditor](https://github.com/jaywcjlove/react-monacoeditor): Monaco Editor component for React.\\n- [@uiw/react-markdown-editor](https://github.com/uiwjs/react-markdown-editor): A markdown editor with preview, implemented with React.js and TypeScript.\\n- [@uiw/react-markdown-preview](https://github.com/jaywcjlove/react-markdown-preview): React component preview markdown text in web browser. \\n\\n## License\\n\\nLicensed under the MIT License.\\n\";","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}